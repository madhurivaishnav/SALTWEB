#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bdw.Application.Salt.Web.Reporting
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="salt_4.3.0")]
	public partial class PeriodicReportListDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblReportSchedule(tblReportSchedule instance);
    partial void UpdatetblReportSchedule(tblReportSchedule instance);
    partial void DeletetblReportSchedule(tblReportSchedule instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblUserType(tblUserType instance);
    partial void UpdatetblUserType(tblUserType instance);
    partial void DeletetblUserType(tblUserType instance);
    #endregion
		
		public PeriodicReportListDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["bd_dev_partially_truncatedConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PeriodicReportListDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PeriodicReportListDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PeriodicReportListDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PeriodicReportListDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblReportSchedule> tblReportSchedules
		{
			get
			{
				return this.GetTable<tblReportSchedule>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblUserType> tblUserTypes
		{
			get
			{
				return this.GetTable<tblUserType>();
			}
		}
		
		public System.Data.Linq.Table<tblBulkInactiveUser> tblBulkInactiveUsers
		{
			get
			{
				return this.GetTable<tblBulkInactiveUser>();
			}
		}
		
		[Function(Name="dbo.prcGetPeriodicReportList")]
		public ISingleResult<prcGetPeriodicReportListResult> prcGetPeriodicReportList([Parameter(Name="OrgID", DbType="Int")] System.Nullable<int> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID);
			return ((ISingleResult<prcGetPeriodicReportListResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.prcGetPeriodicReportListOnInactivateUser")]
		public ISingleResult<prcGetPeriodicReportListOnInactivateUserResult> prcGetPeriodicReportListOnInactivateUser([Parameter(Name="OrgID", DbType="Int")] System.Nullable<int> orgID, [Parameter(Name="Username", DbType="VarChar(50)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID, username);
			return ((ISingleResult<prcGetPeriodicReportListOnInactivateUserResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.prcGetPeriodicReportListUser")]
		public ISingleResult<prcGetPeriodicReportListUserResult> prcGetPeriodicReportListUser([Parameter(Name="OrgID", DbType="Int")] System.Nullable<int> orgID, [Parameter(Name="Username", DbType="VarChar(50)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID, username);
			return ((ISingleResult<prcGetPeriodicReportListUserResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.prcGetPeriodicReportListOnInactivateEmail")]
		public ISingleResult<prcGetPeriodicReportListOnInactivateEmailResult> prcGetPeriodicReportListOnInactivateEmail([Parameter(Name="OrgID", DbType="Int")] System.Nullable<int> orgID, [Parameter(Name="Email", DbType="VarChar(50)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID, email);
			return ((ISingleResult<prcGetPeriodicReportListOnInactivateEmailResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.tblReportSchedule")]
	public partial class tblReportSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScheduleID;
		
		private int _UserID;
		
		private int _ReportID;
		
		private System.Nullable<System.DateTime> _LastRun;
		
		private System.Nullable<System.DateTime> _NextRun;
		
		private System.Nullable<int> _ReportDuration;
		
		private System.Nullable<char> _ReportDurationPeriod;
		
		private System.DateTime _ReportStartDate;
		
		private System.Nullable<System.DateTime> _ReportEndDate;
		
		private System.Nullable<int> _NumberOfReports;
		
		private System.Nullable<int> _ReportFrequency;
		
		private System.Nullable<char> _ReportFrequencyPeriod;
		
		private char _DocumentType;
		
		private string _ReportTitle;
		
		private int _ParamOrganisationID;
		
		private System.Nullable<char> _ParamCompleted;
		
		private System.Nullable<char> _ParamStatus;
		
		private System.Nullable<int> _ParamFailCount;
		
		private string _ParamCourseIDs;
		
		private string _ParamHistoricCourseIDs;
		
		private System.Nullable<char> _ParamAllUnits;
		
		private System.Nullable<int> _ParamTimeExpired;
		
		private System.Nullable<char> _ParamTimeExpiredPeriod;
		
		private System.Nullable<char> _ParamQuizStatus;
		
		private System.Nullable<char> _ParamGroupBy;
		
		private System.Nullable<int> _ParamGroupingOption;
		
		private string _ParamFirstName;
		
		private string _ParamLastName;
		
		private string _ParamUserName;
		
		private string _ParamEmail;
		
		private System.Nullable<char> _ParamIncludeInactive;
		
		private string _ParamSubject;
		
		private string _ParamBody;
		
		private System.Nullable<int> _ParamProfileID;
		
		private System.Nullable<char> _ParamOnlyUsersWithShortfall;
		
		private System.Nullable<System.DateTime> _ParamEffectiveDate;
		
		private System.Nullable<char> _ParamSortBy;
		
		private System.Nullable<int> _ParamClassificationID;
		
		private string _ParamUnitIDs;
		
		private string _ParamLangCode;
		
		private System.Nullable<System.DateTime> _ParamDateTo;
		
		private System.Nullable<System.DateTime> _ParamDateFrom;
		
		private string _ParamLicensingPeriod;
		
		private int _ParamProfilePeriodID;
		
		private System.Nullable<int> _ReportPeriodType;
		
		private System.Nullable<System.DateTime> _ReportFromDate;
		
		private char _IsPeriodic;
		
		private System.Nullable<int> _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private int _NumberDelivered;
		
		private System.Nullable<bool> _TerminatedNormally;
		
		private string _ParamPolicyIDs;
		
		private string _ParamAcceptance;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnReportIDChanging(int value);
    partial void OnReportIDChanged();
    partial void OnLastRunChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRunChanged();
    partial void OnNextRunChanging(System.Nullable<System.DateTime> value);
    partial void OnNextRunChanged();
    partial void OnReportDurationChanging(System.Nullable<int> value);
    partial void OnReportDurationChanged();
    partial void OnReportDurationPeriodChanging(System.Nullable<char> value);
    partial void OnReportDurationPeriodChanged();
    partial void OnReportStartDateChanging(System.DateTime value);
    partial void OnReportStartDateChanged();
    partial void OnReportEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReportEndDateChanged();
    partial void OnNumberOfReportsChanging(System.Nullable<int> value);
    partial void OnNumberOfReportsChanged();
    partial void OnReportFrequencyChanging(System.Nullable<int> value);
    partial void OnReportFrequencyChanged();
    partial void OnReportFrequencyPeriodChanging(System.Nullable<char> value);
    partial void OnReportFrequencyPeriodChanged();
    partial void OnDocumentTypeChanging(char value);
    partial void OnDocumentTypeChanged();
    partial void OnReportTitleChanging(string value);
    partial void OnReportTitleChanged();
    partial void OnParamOrganisationIDChanging(int value);
    partial void OnParamOrganisationIDChanged();
    partial void OnParamCompletedChanging(System.Nullable<char> value);
    partial void OnParamCompletedChanged();
    partial void OnParamStatusChanging(System.Nullable<char> value);
    partial void OnParamStatusChanged();
    partial void OnParamFailCountChanging(System.Nullable<int> value);
    partial void OnParamFailCountChanged();
    partial void OnParamCourseIDsChanging(string value);
    partial void OnParamCourseIDsChanged();
    partial void OnParamHistoricCourseIDsChanging(string value);
    partial void OnParamHistoricCourseIDsChanged();
    partial void OnParamAllUnitsChanging(System.Nullable<char> value);
    partial void OnParamAllUnitsChanged();
    partial void OnParamTimeExpiredChanging(System.Nullable<int> value);
    partial void OnParamTimeExpiredChanged();
    partial void OnParamTimeExpiredPeriodChanging(System.Nullable<char> value);
    partial void OnParamTimeExpiredPeriodChanged();
    partial void OnParamQuizStatusChanging(System.Nullable<char> value);
    partial void OnParamQuizStatusChanged();
    partial void OnParamGroupByChanging(System.Nullable<char> value);
    partial void OnParamGroupByChanged();
    partial void OnParamGroupingOptionChanging(System.Nullable<int> value);
    partial void OnParamGroupingOptionChanged();
    partial void OnParamFirstNameChanging(string value);
    partial void OnParamFirstNameChanged();
    partial void OnParamLastNameChanging(string value);
    partial void OnParamLastNameChanged();
    partial void OnParamUserNameChanging(string value);
    partial void OnParamUserNameChanged();
    partial void OnParamEmailChanging(string value);
    partial void OnParamEmailChanged();
    partial void OnParamIncludeInactiveChanging(System.Nullable<char> value);
    partial void OnParamIncludeInactiveChanged();
    partial void OnParamSubjectChanging(string value);
    partial void OnParamSubjectChanged();
    partial void OnParamBodyChanging(string value);
    partial void OnParamBodyChanged();
    partial void OnParamProfileIDChanging(System.Nullable<int> value);
    partial void OnParamProfileIDChanged();
    partial void OnParamOnlyUsersWithShortfallChanging(System.Nullable<char> value);
    partial void OnParamOnlyUsersWithShortfallChanged();
    partial void OnParamEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnParamEffectiveDateChanged();
    partial void OnParamSortByChanging(System.Nullable<char> value);
    partial void OnParamSortByChanged();
    partial void OnParamClassificationIDChanging(System.Nullable<int> value);
    partial void OnParamClassificationIDChanged();
    partial void OnParamUnitIDsChanging(string value);
    partial void OnParamUnitIDsChanged();
    partial void OnParamLangCodeChanging(string value);
    partial void OnParamLangCodeChanged();
    partial void OnParamDateToChanging(System.Nullable<System.DateTime> value);
    partial void OnParamDateToChanged();
    partial void OnParamDateFromChanging(System.Nullable<System.DateTime> value);
    partial void OnParamDateFromChanged();
    partial void OnParamLicensingPeriodChanging(string value);
    partial void OnParamLicensingPeriodChanged();
    partial void OnParamProfilePeriodIDChanging(int value);
    partial void OnParamProfilePeriodIDChanged();
    partial void OnReportPeriodTypeChanging(System.Nullable<int> value);
    partial void OnReportPeriodTypeChanged();
    partial void OnReportFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReportFromDateChanged();
    partial void OnIsPeriodicChanging(char value);
    partial void OnIsPeriodicChanged();
    partial void OnLastUpdatedByChanging(System.Nullable<int> value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnNumberDeliveredChanging(int value);
    partial void OnNumberDeliveredChanged();
    partial void OnTerminatedNormallyChanging(System.Nullable<bool> value);
    partial void OnTerminatedNormallyChanged();
    partial void OnParamPolicyIDsChanging(string value);
    partial void OnParamPolicyIDsChanged();
    partial void OnParamAcceptanceChanging(string value);
    partial void OnParamAcceptanceChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public tblReportSchedule()
		{
			OnCreated();
		}
		
		[Column(Storage="_ScheduleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReportID", DbType="Int NOT NULL")]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[Column(Storage="_LastRun", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastRun
		{
			get
			{
				return this._LastRun;
			}
			set
			{
				if ((this._LastRun != value))
				{
					this.OnLastRunChanging(value);
					this.SendPropertyChanging();
					this._LastRun = value;
					this.SendPropertyChanged("LastRun");
					this.OnLastRunChanged();
				}
			}
		}
		
		[Column(Storage="_NextRun", DbType="DateTime")]
		public System.Nullable<System.DateTime> NextRun
		{
			get
			{
				return this._NextRun;
			}
			set
			{
				if ((this._NextRun != value))
				{
					this.OnNextRunChanging(value);
					this.SendPropertyChanging();
					this._NextRun = value;
					this.SendPropertyChanged("NextRun");
					this.OnNextRunChanged();
				}
			}
		}
		
		[Column(Storage="_ReportDuration", DbType="Int")]
		public System.Nullable<int> ReportDuration
		{
			get
			{
				return this._ReportDuration;
			}
			set
			{
				if ((this._ReportDuration != value))
				{
					this.OnReportDurationChanging(value);
					this.SendPropertyChanging();
					this._ReportDuration = value;
					this.SendPropertyChanged("ReportDuration");
					this.OnReportDurationChanged();
				}
			}
		}
		
		[Column(Storage="_ReportDurationPeriod", DbType="Char(1)")]
		public System.Nullable<char> ReportDurationPeriod
		{
			get
			{
				return this._ReportDurationPeriod;
			}
			set
			{
				if ((this._ReportDurationPeriod != value))
				{
					this.OnReportDurationPeriodChanging(value);
					this.SendPropertyChanging();
					this._ReportDurationPeriod = value;
					this.SendPropertyChanged("ReportDurationPeriod");
					this.OnReportDurationPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_ReportStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReportStartDate
		{
			get
			{
				return this._ReportStartDate;
			}
			set
			{
				if ((this._ReportStartDate != value))
				{
					this.OnReportStartDateChanging(value);
					this.SendPropertyChanging();
					this._ReportStartDate = value;
					this.SendPropertyChanged("ReportStartDate");
					this.OnReportStartDateChanged();
				}
			}
		}
		
		[Column(Storage="_ReportEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReportEndDate
		{
			get
			{
				return this._ReportEndDate;
			}
			set
			{
				if ((this._ReportEndDate != value))
				{
					this.OnReportEndDateChanging(value);
					this.SendPropertyChanging();
					this._ReportEndDate = value;
					this.SendPropertyChanged("ReportEndDate");
					this.OnReportEndDateChanged();
				}
			}
		}
		
		[Column(Storage="_NumberOfReports", DbType="Int")]
		public System.Nullable<int> NumberOfReports
		{
			get
			{
				return this._NumberOfReports;
			}
			set
			{
				if ((this._NumberOfReports != value))
				{
					this.OnNumberOfReportsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfReports = value;
					this.SendPropertyChanged("NumberOfReports");
					this.OnNumberOfReportsChanged();
				}
			}
		}
		
		[Column(Storage="_ReportFrequency", DbType="Int")]
		public System.Nullable<int> ReportFrequency
		{
			get
			{
				return this._ReportFrequency;
			}
			set
			{
				if ((this._ReportFrequency != value))
				{
					this.OnReportFrequencyChanging(value);
					this.SendPropertyChanging();
					this._ReportFrequency = value;
					this.SendPropertyChanged("ReportFrequency");
					this.OnReportFrequencyChanged();
				}
			}
		}
		
		[Column(Storage="_ReportFrequencyPeriod", DbType="Char(1)")]
		public System.Nullable<char> ReportFrequencyPeriod
		{
			get
			{
				return this._ReportFrequencyPeriod;
			}
			set
			{
				if ((this._ReportFrequencyPeriod != value))
				{
					this.OnReportFrequencyPeriodChanging(value);
					this.SendPropertyChanging();
					this._ReportFrequencyPeriod = value;
					this.SendPropertyChanged("ReportFrequencyPeriod");
					this.OnReportFrequencyPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentType", DbType="Char(1) NOT NULL")]
		public char DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ReportTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ReportTitle
		{
			get
			{
				return this._ReportTitle;
			}
			set
			{
				if ((this._ReportTitle != value))
				{
					this.OnReportTitleChanging(value);
					this.SendPropertyChanging();
					this._ReportTitle = value;
					this.SendPropertyChanged("ReportTitle");
					this.OnReportTitleChanged();
				}
			}
		}
		
		[Column(Storage="_ParamOrganisationID", DbType="Int NOT NULL")]
		public int ParamOrganisationID
		{
			get
			{
				return this._ParamOrganisationID;
			}
			set
			{
				if ((this._ParamOrganisationID != value))
				{
					this.OnParamOrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._ParamOrganisationID = value;
					this.SendPropertyChanged("ParamOrganisationID");
					this.OnParamOrganisationIDChanged();
				}
			}
		}
		
		[Column(Storage="_ParamCompleted", DbType="Char(1)")]
		public System.Nullable<char> ParamCompleted
		{
			get
			{
				return this._ParamCompleted;
			}
			set
			{
				if ((this._ParamCompleted != value))
				{
					this.OnParamCompletedChanging(value);
					this.SendPropertyChanging();
					this._ParamCompleted = value;
					this.SendPropertyChanged("ParamCompleted");
					this.OnParamCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_ParamStatus", DbType="Char(1)")]
		public System.Nullable<char> ParamStatus
		{
			get
			{
				return this._ParamStatus;
			}
			set
			{
				if ((this._ParamStatus != value))
				{
					this.OnParamStatusChanging(value);
					this.SendPropertyChanging();
					this._ParamStatus = value;
					this.SendPropertyChanged("ParamStatus");
					this.OnParamStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ParamFailCount", DbType="Int")]
		public System.Nullable<int> ParamFailCount
		{
			get
			{
				return this._ParamFailCount;
			}
			set
			{
				if ((this._ParamFailCount != value))
				{
					this.OnParamFailCountChanging(value);
					this.SendPropertyChanging();
					this._ParamFailCount = value;
					this.SendPropertyChanged("ParamFailCount");
					this.OnParamFailCountChanged();
				}
			}
		}
		
		[Column(Storage="_ParamCourseIDs", DbType="NVarChar(800)")]
		public string ParamCourseIDs
		{
			get
			{
				return this._ParamCourseIDs;
			}
			set
			{
				if ((this._ParamCourseIDs != value))
				{
					this.OnParamCourseIDsChanging(value);
					this.SendPropertyChanging();
					this._ParamCourseIDs = value;
					this.SendPropertyChanged("ParamCourseIDs");
					this.OnParamCourseIDsChanged();
				}
			}
		}
		
		[Column(Storage="_ParamHistoricCourseIDs", DbType="NVarChar(800)")]
		public string ParamHistoricCourseIDs
		{
			get
			{
				return this._ParamHistoricCourseIDs;
			}
			set
			{
				if ((this._ParamHistoricCourseIDs != value))
				{
					this.OnParamHistoricCourseIDsChanging(value);
					this.SendPropertyChanging();
					this._ParamHistoricCourseIDs = value;
					this.SendPropertyChanged("ParamHistoricCourseIDs");
					this.OnParamHistoricCourseIDsChanged();
				}
			}
		}
		
		[Column(Storage="_ParamAllUnits", DbType="Char(1)")]
		public System.Nullable<char> ParamAllUnits
		{
			get
			{
				return this._ParamAllUnits;
			}
			set
			{
				if ((this._ParamAllUnits != value))
				{
					this.OnParamAllUnitsChanging(value);
					this.SendPropertyChanging();
					this._ParamAllUnits = value;
					this.SendPropertyChanged("ParamAllUnits");
					this.OnParamAllUnitsChanged();
				}
			}
		}
		
		[Column(Storage="_ParamTimeExpired", DbType="Int")]
		public System.Nullable<int> ParamTimeExpired
		{
			get
			{
				return this._ParamTimeExpired;
			}
			set
			{
				if ((this._ParamTimeExpired != value))
				{
					this.OnParamTimeExpiredChanging(value);
					this.SendPropertyChanging();
					this._ParamTimeExpired = value;
					this.SendPropertyChanged("ParamTimeExpired");
					this.OnParamTimeExpiredChanged();
				}
			}
		}
		
		[Column(Storage="_ParamTimeExpiredPeriod", DbType="Char(1)")]
		public System.Nullable<char> ParamTimeExpiredPeriod
		{
			get
			{
				return this._ParamTimeExpiredPeriod;
			}
			set
			{
				if ((this._ParamTimeExpiredPeriod != value))
				{
					this.OnParamTimeExpiredPeriodChanging(value);
					this.SendPropertyChanging();
					this._ParamTimeExpiredPeriod = value;
					this.SendPropertyChanged("ParamTimeExpiredPeriod");
					this.OnParamTimeExpiredPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_ParamQuizStatus", DbType="Char(1)")]
		public System.Nullable<char> ParamQuizStatus
		{
			get
			{
				return this._ParamQuizStatus;
			}
			set
			{
				if ((this._ParamQuizStatus != value))
				{
					this.OnParamQuizStatusChanging(value);
					this.SendPropertyChanging();
					this._ParamQuizStatus = value;
					this.SendPropertyChanged("ParamQuizStatus");
					this.OnParamQuizStatusChanged();
				}
			}
		}
		
		[Column(Storage="_ParamGroupBy", DbType="Char(1)")]
		public System.Nullable<char> ParamGroupBy
		{
			get
			{
				return this._ParamGroupBy;
			}
			set
			{
				if ((this._ParamGroupBy != value))
				{
					this.OnParamGroupByChanging(value);
					this.SendPropertyChanging();
					this._ParamGroupBy = value;
					this.SendPropertyChanged("ParamGroupBy");
					this.OnParamGroupByChanged();
				}
			}
		}
		
		[Column(Storage="_ParamGroupingOption", DbType="Int")]
		public System.Nullable<int> ParamGroupingOption
		{
			get
			{
				return this._ParamGroupingOption;
			}
			set
			{
				if ((this._ParamGroupingOption != value))
				{
					this.OnParamGroupingOptionChanging(value);
					this.SendPropertyChanging();
					this._ParamGroupingOption = value;
					this.SendPropertyChanged("ParamGroupingOption");
					this.OnParamGroupingOptionChanged();
				}
			}
		}
		
		[Column(Storage="_ParamFirstName", DbType="NVarChar(200)")]
		public string ParamFirstName
		{
			get
			{
				return this._ParamFirstName;
			}
			set
			{
				if ((this._ParamFirstName != value))
				{
					this.OnParamFirstNameChanging(value);
					this.SendPropertyChanging();
					this._ParamFirstName = value;
					this.SendPropertyChanged("ParamFirstName");
					this.OnParamFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_ParamLastName", DbType="NVarChar(200)")]
		public string ParamLastName
		{
			get
			{
				return this._ParamLastName;
			}
			set
			{
				if ((this._ParamLastName != value))
				{
					this.OnParamLastNameChanging(value);
					this.SendPropertyChanging();
					this._ParamLastName = value;
					this.SendPropertyChanged("ParamLastName");
					this.OnParamLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_ParamUserName", DbType="NVarChar(200)")]
		public string ParamUserName
		{
			get
			{
				return this._ParamUserName;
			}
			set
			{
				if ((this._ParamUserName != value))
				{
					this.OnParamUserNameChanging(value);
					this.SendPropertyChanging();
					this._ParamUserName = value;
					this.SendPropertyChanged("ParamUserName");
					this.OnParamUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_ParamEmail", DbType="NVarChar(200)")]
		public string ParamEmail
		{
			get
			{
				return this._ParamEmail;
			}
			set
			{
				if ((this._ParamEmail != value))
				{
					this.OnParamEmailChanging(value);
					this.SendPropertyChanging();
					this._ParamEmail = value;
					this.SendPropertyChanged("ParamEmail");
					this.OnParamEmailChanged();
				}
			}
		}
		
		[Column(Storage="_ParamIncludeInactive", DbType="Char(1)")]
		public System.Nullable<char> ParamIncludeInactive
		{
			get
			{
				return this._ParamIncludeInactive;
			}
			set
			{
				if ((this._ParamIncludeInactive != value))
				{
					this.OnParamIncludeInactiveChanging(value);
					this.SendPropertyChanging();
					this._ParamIncludeInactive = value;
					this.SendPropertyChanged("ParamIncludeInactive");
					this.OnParamIncludeInactiveChanged();
				}
			}
		}
		
		[Column(Storage="_ParamSubject", DbType="NVarChar(200)")]
		public string ParamSubject
		{
			get
			{
				return this._ParamSubject;
			}
			set
			{
				if ((this._ParamSubject != value))
				{
					this.OnParamSubjectChanging(value);
					this.SendPropertyChanging();
					this._ParamSubject = value;
					this.SendPropertyChanged("ParamSubject");
					this.OnParamSubjectChanged();
				}
			}
		}
		
		[Column(Storage="_ParamBody", DbType="NVarChar(200)")]
		public string ParamBody
		{
			get
			{
				return this._ParamBody;
			}
			set
			{
				if ((this._ParamBody != value))
				{
					this.OnParamBodyChanging(value);
					this.SendPropertyChanging();
					this._ParamBody = value;
					this.SendPropertyChanged("ParamBody");
					this.OnParamBodyChanged();
				}
			}
		}
		
		[Column(Storage="_ParamProfileID", DbType="Int")]
		public System.Nullable<int> ParamProfileID
		{
			get
			{
				return this._ParamProfileID;
			}
			set
			{
				if ((this._ParamProfileID != value))
				{
					this.OnParamProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ParamProfileID = value;
					this.SendPropertyChanged("ParamProfileID");
					this.OnParamProfileIDChanged();
				}
			}
		}
		
		[Column(Storage="_ParamOnlyUsersWithShortfall", DbType="Char(1)")]
		public System.Nullable<char> ParamOnlyUsersWithShortfall
		{
			get
			{
				return this._ParamOnlyUsersWithShortfall;
			}
			set
			{
				if ((this._ParamOnlyUsersWithShortfall != value))
				{
					this.OnParamOnlyUsersWithShortfallChanging(value);
					this.SendPropertyChanging();
					this._ParamOnlyUsersWithShortfall = value;
					this.SendPropertyChanged("ParamOnlyUsersWithShortfall");
					this.OnParamOnlyUsersWithShortfallChanged();
				}
			}
		}
		
		[Column(Storage="_ParamEffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ParamEffectiveDate
		{
			get
			{
				return this._ParamEffectiveDate;
			}
			set
			{
				if ((this._ParamEffectiveDate != value))
				{
					this.OnParamEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._ParamEffectiveDate = value;
					this.SendPropertyChanged("ParamEffectiveDate");
					this.OnParamEffectiveDateChanged();
				}
			}
		}
		
		[Column(Storage="_ParamSortBy", DbType="Char(1)")]
		public System.Nullable<char> ParamSortBy
		{
			get
			{
				return this._ParamSortBy;
			}
			set
			{
				if ((this._ParamSortBy != value))
				{
					this.OnParamSortByChanging(value);
					this.SendPropertyChanging();
					this._ParamSortBy = value;
					this.SendPropertyChanged("ParamSortBy");
					this.OnParamSortByChanged();
				}
			}
		}
		
		[Column(Storage="_ParamClassificationID", DbType="Int")]
		public System.Nullable<int> ParamClassificationID
		{
			get
			{
				return this._ParamClassificationID;
			}
			set
			{
				if ((this._ParamClassificationID != value))
				{
					this.OnParamClassificationIDChanging(value);
					this.SendPropertyChanging();
					this._ParamClassificationID = value;
					this.SendPropertyChanged("ParamClassificationID");
					this.OnParamClassificationIDChanged();
				}
			}
		}
		
		[Column(Storage="_ParamUnitIDs", DbType="NVarChar(MAX)")]
		public string ParamUnitIDs
		{
			get
			{
				return this._ParamUnitIDs;
			}
			set
			{
				if ((this._ParamUnitIDs != value))
				{
					this.OnParamUnitIDsChanging(value);
					this.SendPropertyChanging();
					this._ParamUnitIDs = value;
					this.SendPropertyChanged("ParamUnitIDs");
					this.OnParamUnitIDsChanged();
				}
			}
		}
		
		[Column(Storage="_ParamLangCode", DbType="NVarChar(10)")]
		public string ParamLangCode
		{
			get
			{
				return this._ParamLangCode;
			}
			set
			{
				if ((this._ParamLangCode != value))
				{
					this.OnParamLangCodeChanging(value);
					this.SendPropertyChanging();
					this._ParamLangCode = value;
					this.SendPropertyChanged("ParamLangCode");
					this.OnParamLangCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ParamDateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> ParamDateTo
		{
			get
			{
				return this._ParamDateTo;
			}
			set
			{
				if ((this._ParamDateTo != value))
				{
					this.OnParamDateToChanging(value);
					this.SendPropertyChanging();
					this._ParamDateTo = value;
					this.SendPropertyChanged("ParamDateTo");
					this.OnParamDateToChanged();
				}
			}
		}
		
		[Column(Storage="_ParamDateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> ParamDateFrom
		{
			get
			{
				return this._ParamDateFrom;
			}
			set
			{
				if ((this._ParamDateFrom != value))
				{
					this.OnParamDateFromChanging(value);
					this.SendPropertyChanging();
					this._ParamDateFrom = value;
					this.SendPropertyChanged("ParamDateFrom");
					this.OnParamDateFromChanged();
				}
			}
		}
		
		[Column(Storage="_ParamLicensingPeriod", DbType="VarChar(8000)")]
		public string ParamLicensingPeriod
		{
			get
			{
				return this._ParamLicensingPeriod;
			}
			set
			{
				if ((this._ParamLicensingPeriod != value))
				{
					this.OnParamLicensingPeriodChanging(value);
					this.SendPropertyChanging();
					this._ParamLicensingPeriod = value;
					this.SendPropertyChanged("ParamLicensingPeriod");
					this.OnParamLicensingPeriodChanged();
				}
			}
		}
		
		[Column(Storage="_ParamProfilePeriodID", DbType="Int NOT NULL")]
		public int ParamProfilePeriodID
		{
			get
			{
				return this._ParamProfilePeriodID;
			}
			set
			{
				if ((this._ParamProfilePeriodID != value))
				{
					this.OnParamProfilePeriodIDChanging(value);
					this.SendPropertyChanging();
					this._ParamProfilePeriodID = value;
					this.SendPropertyChanged("ParamProfilePeriodID");
					this.OnParamProfilePeriodIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReportPeriodType", DbType="Int")]
		public System.Nullable<int> ReportPeriodType
		{
			get
			{
				return this._ReportPeriodType;
			}
			set
			{
				if ((this._ReportPeriodType != value))
				{
					this.OnReportPeriodTypeChanging(value);
					this.SendPropertyChanging();
					this._ReportPeriodType = value;
					this.SendPropertyChanged("ReportPeriodType");
					this.OnReportPeriodTypeChanged();
				}
			}
		}
		
		[Column(Storage="_ReportFromDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReportFromDate
		{
			get
			{
				return this._ReportFromDate;
			}
			set
			{
				if ((this._ReportFromDate != value))
				{
					this.OnReportFromDateChanging(value);
					this.SendPropertyChanging();
					this._ReportFromDate = value;
					this.SendPropertyChanged("ReportFromDate");
					this.OnReportFromDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsPeriodic", DbType="Char(1) NOT NULL")]
		public char IsPeriodic
		{
			get
			{
				return this._IsPeriodic;
			}
			set
			{
				if ((this._IsPeriodic != value))
				{
					this.OnIsPeriodicChanging(value);
					this.SendPropertyChanging();
					this._IsPeriodic = value;
					this.SendPropertyChanged("IsPeriodic");
					this.OnIsPeriodicChanged();
				}
			}
		}
		
		[Column(Storage="_LastUpdatedBy", DbType="Int")]
		public System.Nullable<int> LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[Column(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_NumberDelivered", DbType="Int NOT NULL")]
		public int NumberDelivered
		{
			get
			{
				return this._NumberDelivered;
			}
			set
			{
				if ((this._NumberDelivered != value))
				{
					this.OnNumberDeliveredChanging(value);
					this.SendPropertyChanging();
					this._NumberDelivered = value;
					this.SendPropertyChanged("NumberDelivered");
					this.OnNumberDeliveredChanged();
				}
			}
		}
		
		[Column(Storage="_TerminatedNormally", DbType="Bit")]
		public System.Nullable<bool> TerminatedNormally
		{
			get
			{
				return this._TerminatedNormally;
			}
			set
			{
				if ((this._TerminatedNormally != value))
				{
					this.OnTerminatedNormallyChanging(value);
					this.SendPropertyChanging();
					this._TerminatedNormally = value;
					this.SendPropertyChanged("TerminatedNormally");
					this.OnTerminatedNormallyChanged();
				}
			}
		}
		
		[Column(Storage="_ParamPolicyIDs", DbType="NVarChar(4000)")]
		public string ParamPolicyIDs
		{
			get
			{
				return this._ParamPolicyIDs;
			}
			set
			{
				if ((this._ParamPolicyIDs != value))
				{
					this.OnParamPolicyIDsChanging(value);
					this.SendPropertyChanging();
					this._ParamPolicyIDs = value;
					this.SendPropertyChanged("ParamPolicyIDs");
					this.OnParamPolicyIDsChanged();
				}
			}
		}
		
		[Column(Storage="_ParamAcceptance", DbType="VarChar(20)")]
		public string ParamAcceptance
		{
			get
			{
				return this._ParamAcceptance;
			}
			set
			{
				if ((this._ParamAcceptance != value))
				{
					this.OnParamAcceptanceChanging(value);
					this.SendPropertyChanging();
					this._ParamAcceptance = value;
					this.SendPropertyChanged("ParamAcceptance");
					this.OnParamAcceptanceChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private string _ExternalID;
		
		private System.Nullable<int> _OrganisationID;
		
		private System.Nullable<int> _UnitID;
		
		private int _UserTypeID;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _DateArchived;
		
		private int _CreatedBy;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<int> _UpdatedBy;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private int _LoginFailCount;
		
		private System.Nullable<int> _TimeZoneID;
		
		private string _DelinquencyManagerEmail;
		
		private bool _NewStarter;
		
		private bool _NotifyMgr;
		
		private bool _NotifyUnitAdmin;
		
		private bool _NotifyOrgAdmin;
		
		private EntityRef<tblUserType> _tblUserType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnExternalIDChanging(string value);
    partial void OnExternalIDChanged();
    partial void OnOrganisationIDChanging(System.Nullable<int> value);
    partial void OnOrganisationIDChanged();
    partial void OnUnitIDChanging(System.Nullable<int> value);
    partial void OnUnitIDChanged();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDateArchivedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateArchivedChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUpdatedByChanging(System.Nullable<int> value);
    partial void OnUpdatedByChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnLoginFailCountChanging(int value);
    partial void OnLoginFailCountChanged();
    partial void OnTimeZoneIDChanging(System.Nullable<int> value);
    partial void OnTimeZoneIDChanged();
    partial void OnDelinquencyManagerEmailChanging(string value);
    partial void OnDelinquencyManagerEmailChanged();
    partial void OnNewStarterChanging(bool value);
    partial void OnNewStarterChanged();
    partial void OnNotifyMgrChanging(bool value);
    partial void OnNotifyMgrChanged();
    partial void OnNotifyUnitAdminChanging(bool value);
    partial void OnNotifyUnitAdminChanged();
    partial void OnNotifyOrgAdminChanging(bool value);
    partial void OnNotifyOrgAdminChanged();
    #endregion
		
		public tblUser()
		{
			this._tblUserType = default(EntityRef<tblUserType>);
			OnCreated();
		}
		
		[Column(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_ExternalID", DbType="NVarChar(50)")]
		public string ExternalID
		{
			get
			{
				return this._ExternalID;
			}
			set
			{
				if ((this._ExternalID != value))
				{
					this.OnExternalIDChanging(value);
					this.SendPropertyChanging();
					this._ExternalID = value;
					this.SendPropertyChanged("ExternalID");
					this.OnExternalIDChanged();
				}
			}
		}
		
		[Column(Storage="_OrganisationID", DbType="Int")]
		public System.Nullable<int> OrganisationID
		{
			get
			{
				return this._OrganisationID;
			}
			set
			{
				if ((this._OrganisationID != value))
				{
					this.OnOrganisationIDChanging(value);
					this.SendPropertyChanging();
					this._OrganisationID = value;
					this.SendPropertyChanged("OrganisationID");
					this.OnOrganisationIDChanged();
				}
			}
		}
		
		[Column(Storage="_UnitID", DbType="Int")]
		public System.Nullable<int> UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserTypeID", DbType="Int NOT NULL")]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					if (this._tblUserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[Column(Storage="_DateArchived", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateArchived
		{
			get
			{
				return this._DateArchived;
			}
			set
			{
				if ((this._DateArchived != value))
				{
					this.OnDateArchivedChanging(value);
					this.SendPropertyChanging();
					this._DateArchived = value;
					this.SendPropertyChanged("DateArchived");
					this.OnDateArchivedChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="Int")]
		public System.Nullable<int> UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[Column(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[Column(Storage="_LoginFailCount", DbType="Int NOT NULL")]
		public int LoginFailCount
		{
			get
			{
				return this._LoginFailCount;
			}
			set
			{
				if ((this._LoginFailCount != value))
				{
					this.OnLoginFailCountChanging(value);
					this.SendPropertyChanging();
					this._LoginFailCount = value;
					this.SendPropertyChanged("LoginFailCount");
					this.OnLoginFailCountChanged();
				}
			}
		}
		
		[Column(Storage="_TimeZoneID", DbType="Int")]
		public System.Nullable<int> TimeZoneID
		{
			get
			{
				return this._TimeZoneID;
			}
			set
			{
				if ((this._TimeZoneID != value))
				{
					this.OnTimeZoneIDChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneID = value;
					this.SendPropertyChanged("TimeZoneID");
					this.OnTimeZoneIDChanged();
				}
			}
		}
		
		[Column(Storage="_DelinquencyManagerEmail", DbType="NVarChar(100)")]
		public string DelinquencyManagerEmail
		{
			get
			{
				return this._DelinquencyManagerEmail;
			}
			set
			{
				if ((this._DelinquencyManagerEmail != value))
				{
					this.OnDelinquencyManagerEmailChanging(value);
					this.SendPropertyChanging();
					this._DelinquencyManagerEmail = value;
					this.SendPropertyChanged("DelinquencyManagerEmail");
					this.OnDelinquencyManagerEmailChanged();
				}
			}
		}
		
		[Column(Storage="_NewStarter", DbType="Bit NOT NULL")]
		public bool NewStarter
		{
			get
			{
				return this._NewStarter;
			}
			set
			{
				if ((this._NewStarter != value))
				{
					this.OnNewStarterChanging(value);
					this.SendPropertyChanging();
					this._NewStarter = value;
					this.SendPropertyChanged("NewStarter");
					this.OnNewStarterChanged();
				}
			}
		}
		
		[Column(Storage="_NotifyMgr", DbType="Bit NOT NULL")]
		public bool NotifyMgr
		{
			get
			{
				return this._NotifyMgr;
			}
			set
			{
				if ((this._NotifyMgr != value))
				{
					this.OnNotifyMgrChanging(value);
					this.SendPropertyChanging();
					this._NotifyMgr = value;
					this.SendPropertyChanged("NotifyMgr");
					this.OnNotifyMgrChanged();
				}
			}
		}
		
		[Column(Storage="_NotifyUnitAdmin", DbType="Bit NOT NULL")]
		public bool NotifyUnitAdmin
		{
			get
			{
				return this._NotifyUnitAdmin;
			}
			set
			{
				if ((this._NotifyUnitAdmin != value))
				{
					this.OnNotifyUnitAdminChanging(value);
					this.SendPropertyChanging();
					this._NotifyUnitAdmin = value;
					this.SendPropertyChanged("NotifyUnitAdmin");
					this.OnNotifyUnitAdminChanged();
				}
			}
		}
		
		[Column(Storage="_NotifyOrgAdmin", DbType="Bit NOT NULL")]
		public bool NotifyOrgAdmin
		{
			get
			{
				return this._NotifyOrgAdmin;
			}
			set
			{
				if ((this._NotifyOrgAdmin != value))
				{
					this.OnNotifyOrgAdminChanging(value);
					this.SendPropertyChanging();
					this._NotifyOrgAdmin = value;
					this.SendPropertyChanged("NotifyOrgAdmin");
					this.OnNotifyOrgAdminChanged();
				}
			}
		}
		
		[Association(Name="tblUserType_tblUser", Storage="_tblUserType", ThisKey="UserTypeID", OtherKey="UserTypeID", IsForeignKey=true)]
		public tblUserType tblUserType
		{
			get
			{
				return this._tblUserType.Entity;
			}
			set
			{
				tblUserType previousValue = this._tblUserType.Entity;
				if (((previousValue != value) 
							|| (this._tblUserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUserType.Entity = null;
						previousValue.tblUsers.Remove(this);
					}
					this._tblUserType.Entity = value;
					if ((value != null))
					{
						value.tblUsers.Add(this);
						this._UserTypeID = value.UserTypeID;
					}
					else
					{
						this._UserTypeID = default(int);
					}
					this.SendPropertyChanged("tblUserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.tblUserType")]
	public partial class tblUserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserTypeID;
		
		private string _Type;
		
		private EntitySet<tblUser> _tblUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserTypeIDChanging(int value);
    partial void OnUserTypeIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public tblUserType()
		{
			this._tblUsers = new EntitySet<tblUser>(new Action<tblUser>(this.attach_tblUsers), new Action<tblUser>(this.detach_tblUsers));
			OnCreated();
		}
		
		[Column(Storage="_UserTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Association(Name="tblUserType_tblUser", Storage="_tblUsers", ThisKey="UserTypeID", OtherKey="UserTypeID")]
		public EntitySet<tblUser> tblUsers
		{
			get
			{
				return this._tblUsers;
			}
			set
			{
				this._tblUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUserType = this;
		}
		
		private void detach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUserType = null;
		}
	}
	
	[Table(Name="dbo.tblBulkInactiveUsers")]
	public partial class tblBulkInactiveUser
	{
		
		private int _UserID;
		
		private bool _Processed;
		
		public tblBulkInactiveUser()
		{
		}
		
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_Processed", DbType="Bit NOT NULL")]
		public bool Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this._Processed = value;
				}
			}
		}
	}
	
	public partial class prcGetPeriodicReportListResult
	{
		
		private int _ScheduleID;
		
		private int _ReportID;
		
		private int _UserID;
		
		private string _ReportTitle;
		
		private string _ReportName;
		
		private string _ReportFrequency;
		
		private string _DateCreated;
		
		private string _ReportStartDate;
		
		private string _ReportEndDate;
		
		private string _NextRun;
		
		private string _Username;
		
		private string _Type;
		
		private string _CCUser;
		
		public prcGetPeriodicReportListResult()
		{
		}
		
		[Column(Storage="_ScheduleID", DbType="Int NOT NULL")]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this._ScheduleID = value;
				}
			}
		}
		
		[Column(Storage="_ReportID", DbType="Int NOT NULL")]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this._ReportID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_ReportTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ReportTitle
		{
			get
			{
				return this._ReportTitle;
			}
			set
			{
				if ((this._ReportTitle != value))
				{
					this._ReportTitle = value;
				}
			}
		}
		
		[Column(Storage="_ReportName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this._ReportName = value;
				}
			}
		}
		
		[Column(Storage="_ReportFrequency", DbType="VarChar(37)")]
		public string ReportFrequency
		{
			get
			{
				return this._ReportFrequency;
			}
			set
			{
				if ((this._ReportFrequency != value))
				{
					this._ReportFrequency = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="VarChar(11)")]
		public string DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_ReportStartDate", DbType="VarChar(11)")]
		public string ReportStartDate
		{
			get
			{
				return this._ReportStartDate;
			}
			set
			{
				if ((this._ReportStartDate != value))
				{
					this._ReportStartDate = value;
				}
			}
		}
		
		[Column(Storage="_ReportEndDate", DbType="VarChar(11)")]
		public string ReportEndDate
		{
			get
			{
				return this._ReportEndDate;
			}
			set
			{
				if ((this._ReportEndDate != value))
				{
					this._ReportEndDate = value;
				}
			}
		}
		
		[Column(Storage="_NextRun", DbType="VarChar(11)")]
		public string NextRun
		{
			get
			{
				return this._NextRun;
			}
			set
			{
				if ((this._NextRun != value))
				{
					this._NextRun = value;
				}
			}
		}
		
		[Column(Storage="_Username", DbType="NVarChar(101)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_CCUser", DbType="NVarChar(100)")]
		public string CCUser
		{
			get
			{
				return this._CCUser;
			}
			set
			{
				if ((this._CCUser != value))
				{
					this._CCUser = value;
				}
			}
		}
	}
	
	public partial class prcGetPeriodicReportListOnInactivateUserResult
	{
		
		private int _ScheduleID;
		
		private int _UserID;
		
		private int _ReportID;
		
		private string _ReportTitle;
		
		private string _Username;
		
		private string _ReportName;
		
		private System.Nullable<int> _ReportFrequency;
		
		public prcGetPeriodicReportListOnInactivateUserResult()
		{
		}
		
		[Column(Storage="_ScheduleID", DbType="Int NOT NULL")]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this._ScheduleID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_ReportID", DbType="Int NOT NULL")]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this._ReportID = value;
				}
			}
		}
		
		[Column(Storage="_ReportTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ReportTitle
		{
			get
			{
				return this._ReportTitle;
			}
			set
			{
				if ((this._ReportTitle != value))
				{
					this._ReportTitle = value;
				}
			}
		}
		
		[Column(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[Column(Storage="_ReportName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this._ReportName = value;
				}
			}
		}
		
		[Column(Storage="_ReportFrequency", DbType="Int")]
		public System.Nullable<int> ReportFrequency
		{
			get
			{
				return this._ReportFrequency;
			}
			set
			{
				if ((this._ReportFrequency != value))
				{
					this._ReportFrequency = value;
				}
			}
		}
	}
	
	public partial class prcGetPeriodicReportListUserResult
	{
		
		private int _ScheduleID;
		
		private int _ReportID;
		
		private int _UserID;
		
		private string _ReportTitle;
		
		private string _ReportName;
		
		private string _ReportFrequency;
		
		private string _DateCreated;
		
		private string _ReportStartDate;
		
		private string _ReportEndDate;
		
		private string _NextRun;
		
		private string _Username;
		
		private string _Type;
		
		private string _CCUser;
		
		public prcGetPeriodicReportListUserResult()
		{
		}
		
		[Column(Storage="_ScheduleID", DbType="Int NOT NULL")]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this._ScheduleID = value;
				}
			}
		}
		
		[Column(Storage="_ReportID", DbType="Int NOT NULL")]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this._ReportID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_ReportTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ReportTitle
		{
			get
			{
				return this._ReportTitle;
			}
			set
			{
				if ((this._ReportTitle != value))
				{
					this._ReportTitle = value;
				}
			}
		}
		
		[Column(Storage="_ReportName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this._ReportName = value;
				}
			}
		}
		
		[Column(Storage="_ReportFrequency", DbType="VarChar(37)")]
		public string ReportFrequency
		{
			get
			{
				return this._ReportFrequency;
			}
			set
			{
				if ((this._ReportFrequency != value))
				{
					this._ReportFrequency = value;
				}
			}
		}
		
		[Column(Storage="_DateCreated", DbType="VarChar(11)")]
		public string DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[Column(Storage="_ReportStartDate", DbType="VarChar(11)")]
		public string ReportStartDate
		{
			get
			{
				return this._ReportStartDate;
			}
			set
			{
				if ((this._ReportStartDate != value))
				{
					this._ReportStartDate = value;
				}
			}
		}
		
		[Column(Storage="_ReportEndDate", DbType="VarChar(11)")]
		public string ReportEndDate
		{
			get
			{
				return this._ReportEndDate;
			}
			set
			{
				if ((this._ReportEndDate != value))
				{
					this._ReportEndDate = value;
				}
			}
		}
		
		[Column(Storage="_NextRun", DbType="VarChar(11)")]
		public string NextRun
		{
			get
			{
				return this._NextRun;
			}
			set
			{
				if ((this._NextRun != value))
				{
					this._NextRun = value;
				}
			}
		}
		
		[Column(Storage="_Username", DbType="NVarChar(101)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[Column(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[Column(Storage="_CCUser", DbType="NVarChar(100)")]
		public string CCUser
		{
			get
			{
				return this._CCUser;
			}
			set
			{
				if ((this._CCUser != value))
				{
					this._CCUser = value;
				}
			}
		}
	}
	
	public partial class prcGetPeriodicReportListOnInactivateEmailResult
	{
		
		private int _ScheduleID;
		
		private int _UserID;
		
		private int _ReportID;
		
		private string _ReportTitle;
		
		private string _Username;
		
		private string _ReportName;
		
		private System.Nullable<int> _ReportFrequency;
		
		public prcGetPeriodicReportListOnInactivateEmailResult()
		{
		}
		
		[Column(Storage="_ScheduleID", DbType="Int NOT NULL")]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this._ScheduleID = value;
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[Column(Storage="_ReportID", DbType="Int NOT NULL")]
		public int ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this._ReportID = value;
				}
			}
		}
		
		[Column(Storage="_ReportTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ReportTitle
		{
			get
			{
				return this._ReportTitle;
			}
			set
			{
				if ((this._ReportTitle != value))
				{
					this._ReportTitle = value;
				}
			}
		}
		
		[Column(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[Column(Storage="_ReportName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this._ReportName = value;
				}
			}
		}
		
		[Column(Storage="_ReportFrequency", DbType="Int")]
		public System.Nullable<int> ReportFrequency
		{
			get
			{
				return this._ReportFrequency;
			}
			set
			{
				if ((this._ReportFrequency != value))
				{
					this._ReportFrequency = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
